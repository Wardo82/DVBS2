-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj/hdlsrc/transmitter/shift_and_xor.vhd
-- Created: 2021-02-07 15:21:34
-- 
-- Generated by MATLAB 9.9 and HDL Coder 3.17
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: shift_and_xor
-- Source Path: transmitter/tran_dut/bch_encoder/shift_and_xor
-- Hierarchy Level: 2
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY shift_and_xor IS
  PORT( input_bit                         :   IN    std_logic;
        registers_in                      :   IN    std_logic_vector(0 TO 191);  -- ufix1 [192]
        flag                              :   IN    std_logic_vector(0 TO 191);  -- ufix1 [192]
        registers_out                     :   OUT   std_logic_vector(0 TO 191)  -- ufix1 [192]
        );
END shift_and_xor;


ARCHITECTURE rtl OF shift_and_xor IS

  -- Functions
  -- HDLCODER_TO_STDLOGIC 
  FUNCTION hdlcoder_to_stdlogic(arg: boolean) RETURN std_logic IS
  BEGIN
    IF arg THEN
      RETURN '1';
    ELSE
      RETURN '0';
    END IF;
  END FUNCTION;


BEGIN
  shift_and_xor_1_output : PROCESS (flag, input_bit, registers_in)
    VARIABLE buffer_rsvd : std_logic_vector(0 TO 191);
  BEGIN
    buffer_rsvd(0) := input_bit;
    buffer_rsvd(1 TO 191) := registers_in(0 TO 190);

    FOR t_0 IN 0 TO 191 LOOP
      registers_out(t_0) <= hdlcoder_to_stdlogic((buffer_rsvd(t_0) /= '0') /= (flag(t_0) /= '0'));
    END LOOP;

  END PROCESS shift_and_xor_1_output;


END rtl;

