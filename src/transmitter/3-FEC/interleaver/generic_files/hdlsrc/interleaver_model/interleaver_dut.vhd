-- -------------------------------------------------------------
-- 
-- File Name: /home/wardo/Documents/DVBS2/DVBS2/src/transmitter/3-FEC/interleaver/generic_files/hdlsrc/interleaver_model/interleaver_dut.vhd
-- Created: 2021-02-05 06:38:03
-- 
-- Generated by MATLAB 9.9 and HDL Coder 3.17
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Model base rate: 1
-- Target subsystem base rate: 1
-- 
-- 
-- Clock Enable  Sample Time
-- -------------------------------------------------------------
-- ce_out        1
-- -------------------------------------------------------------
-- 
-- 
-- Output Signal                 Clock Enable  Sample Time
-- -------------------------------------------------------------
-- data_out                      ce_out        1
-- valid_out                     ce_out        1
-- -------------------------------------------------------------
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: interleaver_dut
-- Source Path: interleaver_model/interleaver_dut
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY interleaver_dut IS
  PORT( clk                               :   IN    std_logic;
        reset_x                           :   IN    std_logic;
        clk_enable                        :   IN    std_logic;
        input_bit                         :   IN    std_logic;
        valid                             :   IN    std_logic;
        ce_out                            :   OUT   std_logic;
        data_out                          :   OUT   std_logic_vector(2 DOWNTO 0);  -- ufix3
        valid_out                         :   OUT   std_logic
        );
END interleaver_dut;


ARCHITECTURE rtl OF interleaver_dut IS

  -- Component Declarations
  COMPONENT interleaver
    PORT( clk                             :   IN    std_logic;
          reset_x                         :   IN    std_logic;
          enb                             :   IN    std_logic;
          input_bit                       :   IN    std_logic;
          start                           :   IN    std_logic;
          data                            :   OUT   std_logic_vector(2 DOWNTO 0);  -- ufix3
          valid                           :   OUT   std_logic
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : interleaver
    USE ENTITY work.interleaver(rtl);

  -- Signals
  SIGNAL data                             : std_logic_vector(2 DOWNTO 0);  -- ufix3
  SIGNAL valid_1                          : std_logic;

BEGIN
  u_interleaver : interleaver
    PORT MAP( clk => clk,
              reset_x => reset_x,
              enb => clk_enable,
              input_bit => input_bit,
              start => valid,
              data => data,  -- ufix3
              valid => valid_1
              );

  ce_out <= clk_enable;

  data_out <= data;

  valid_out <= valid_1;

END rtl;

