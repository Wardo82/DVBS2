-- -------------------------------------------------------------
-- 
-- File Name: /home/wardo/Documents/DVBS2/DVBS2/src/transmitter/3-FEC/ldpc/generic_files/hdlsrc/ldpc_dvbs2_model_v2/select_address.vhd
-- Created: 2021-02-07 12:50:38
-- 
-- Generated by MATLAB 9.9 and HDL Coder 3.17
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: select_address
-- Source Path: ldpc_dvbs2_model_v2/ldpc_encoder/select_address
-- Hierarchy Level: 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.ldpc_encoder_pac.ALL;

ENTITY select_address IS
  PORT( addresses                         :   IN    vector_of_std_logic_vector14(0 TO 11);  -- ufix14 [12]
        a1                                :   OUT   std_logic_vector(13 DOWNTO 0);  -- ufix14
        a2                                :   OUT   std_logic_vector(13 DOWNTO 0);  -- ufix14
        a3                                :   OUT   std_logic_vector(13 DOWNTO 0);  -- ufix14
        a4                                :   OUT   std_logic_vector(13 DOWNTO 0);  -- ufix14
        a5                                :   OUT   std_logic_vector(13 DOWNTO 0);  -- ufix14
        a6                                :   OUT   std_logic_vector(13 DOWNTO 0);  -- ufix14
        a7                                :   OUT   std_logic_vector(13 DOWNTO 0);  -- ufix14
        a8                                :   OUT   std_logic_vector(13 DOWNTO 0);  -- ufix14
        a9                                :   OUT   std_logic_vector(13 DOWNTO 0);  -- ufix14
        a10                               :   OUT   std_logic_vector(13 DOWNTO 0);  -- ufix14
        a11                               :   OUT   std_logic_vector(13 DOWNTO 0);  -- ufix14
        a12                               :   OUT   std_logic_vector(13 DOWNTO 0)  -- ufix14
        );
END select_address;


ARCHITECTURE rtl OF select_address IS

  -- Signals
  SIGNAL addresses_unsigned               : vector_of_unsigned14(0 TO 11);  -- ufix14 [12]
  SIGNAL a1_tmp                           : unsigned(13 DOWNTO 0);  -- ufix14
  SIGNAL a2_tmp                           : unsigned(13 DOWNTO 0);  -- ufix14
  SIGNAL a3_tmp                           : unsigned(13 DOWNTO 0);  -- ufix14
  SIGNAL a4_tmp                           : unsigned(13 DOWNTO 0);  -- ufix14
  SIGNAL a5_tmp                           : unsigned(13 DOWNTO 0);  -- ufix14
  SIGNAL a6_tmp                           : unsigned(13 DOWNTO 0);  -- ufix14
  SIGNAL a7_tmp                           : unsigned(13 DOWNTO 0);  -- ufix14
  SIGNAL a8_tmp                           : unsigned(13 DOWNTO 0);  -- ufix14
  SIGNAL a9_tmp                           : unsigned(13 DOWNTO 0);  -- ufix14
  SIGNAL a10_tmp                          : unsigned(13 DOWNTO 0);  -- ufix14
  SIGNAL a11_tmp                          : unsigned(13 DOWNTO 0);  -- ufix14
  SIGNAL a12_tmp                          : unsigned(13 DOWNTO 0);  -- ufix14

BEGIN
  outputgen: FOR k IN 0 TO 11 GENERATE
    addresses_unsigned(k) <= unsigned(addresses(k));
  END GENERATE;

  --MATLAB Function 'ldpc_encoder/select_address'
  a1_tmp <= addresses_unsigned(0);
  a2_tmp <= addresses_unsigned(1);
  a3_tmp <= addresses_unsigned(2);
  a4_tmp <= addresses_unsigned(3);
  a5_tmp <= addresses_unsigned(4);
  a6_tmp <= addresses_unsigned(5);
  a7_tmp <= addresses_unsigned(6);
  a8_tmp <= addresses_unsigned(7);
  a9_tmp <= addresses_unsigned(8);
  a10_tmp <= addresses_unsigned(9);
  a11_tmp <= addresses_unsigned(10);
  a12_tmp <= addresses_unsigned(11);

  a1 <= std_logic_vector(a1_tmp);

  a2 <= std_logic_vector(a2_tmp);

  a3 <= std_logic_vector(a3_tmp);

  a4 <= std_logic_vector(a4_tmp);

  a5 <= std_logic_vector(a5_tmp);

  a6 <= std_logic_vector(a6_tmp);

  a7 <= std_logic_vector(a7_tmp);

  a8 <= std_logic_vector(a8_tmp);

  a9 <= std_logic_vector(a9_tmp);

  a10 <= std_logic_vector(a10_tmp);

  a11 <= std_logic_vector(a11_tmp);

  a12 <= std_logic_vector(a12_tmp);

END rtl;

