-- -------------------------------------------------------------
-- 
-- File Name: /home/wardo/Documents/DVBS2/DVBS2/src/transmitter/generic_files/hdlsrc/transmitter/tran_dut_tc.vhd
-- Created: 2021-02-05 09:22:23
-- 
-- Generated by MATLAB 9.9 and HDL Coder 3.17
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: tran_dut_tc
-- Source Path: tran_dut_tc
-- Hierarchy Level: 1
-- 
-- Master clock enable input: clk_enable
-- 
-- enb         : identical to clk_enable
-- enb_1_1_1   : identical to clk_enable
-- enb_1_8_0   : 8x slower than clk with last phase
-- enb_1_8_1   : 8x slower than clk with phase 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY tran_dut_tc IS
  PORT( clk                               :   IN    std_logic;
        reset_x                           :   IN    std_logic;
        clk_enable                        :   IN    std_logic;
        enb                               :   OUT   std_logic;
        enb_1_1_1                         :   OUT   std_logic;
        enb_1_8_0                         :   OUT   std_logic;
        enb_1_8_1                         :   OUT   std_logic
        );
END tran_dut_tc;


ARCHITECTURE rtl OF tran_dut_tc IS

  -- Signals
  SIGNAL count8                           : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL phase_all                        : std_logic;
  SIGNAL phase_0                          : std_logic;
  SIGNAL phase_0_tmp                      : std_logic;
  SIGNAL phase_1                          : std_logic;
  SIGNAL phase_1_tmp                      : std_logic;

BEGIN
  Counter8 : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      count8 <= to_unsigned(1, 3);
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        IF count8 >= to_unsigned(7, 3) THEN
          count8 <= to_unsigned(0, 3);
        ELSE
          count8 <= count8 + to_unsigned(1, 3);
        END IF;
      END IF;
    END IF; 
  END PROCESS Counter8;

  phase_all <= '1' WHEN clk_enable = '1' ELSE '0';

  temp_process1 : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      phase_0 <= '0';
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        phase_0 <= phase_0_tmp;
      END IF;
    END IF; 
  END PROCESS temp_process1;

  phase_0_tmp <= '1' WHEN count8 = to_unsigned(7, 3) AND clk_enable = '1' ELSE '0';

  temp_process2 : PROCESS (clk, reset_x)
  BEGIN
    IF reset_x = '1' THEN
      phase_1 <= '1';
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        phase_1 <= phase_1_tmp;
      END IF;
    END IF; 
  END PROCESS temp_process2;

  phase_1_tmp <= '1' WHEN count8 = to_unsigned(0, 3) AND clk_enable = '1' ELSE '0';

  enb <=  phase_all AND clk_enable;

  enb_1_1_1 <=  phase_all AND clk_enable;

  enb_1_8_0 <=  phase_0 AND clk_enable;

  enb_1_8_1 <=  phase_1 AND clk_enable;


END rtl;

