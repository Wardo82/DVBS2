-- -------------------------------------------------------------
-- 
-- File Name: /home/wardo/Documents/DVBS2/DVBS2/src/transmitter/6-BaseBandShaping/hdlsrc/base_band_shaping_model/bb_shaping.vhd
-- Created: 2021-01-01 23:04:26
-- 
-- Generated by MATLAB 9.9 and HDL Coder 3.17
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Model base rate: 0.104167
-- Target subsystem base rate: 0.104167
-- 
-- 
-- Clock Enable  Sample Time
-- -------------------------------------------------------------
-- ce_out        0.104167
-- -------------------------------------------------------------
-- 
-- 
-- Output Signal                 Clock Enable  Sample Time
-- -------------------------------------------------------------
-- i_filtered                    ce_out        0.104167
-- q_filtered                    ce_out        0.104167
-- -------------------------------------------------------------
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: bb_shaping
-- Source Path: base_band_shaping_model/bb_shaping
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY bb_shaping IS
  PORT( clk                               :   IN    std_logic;
        reset_x                           :   IN    std_logic;
        clk_enable                        :   IN    std_logic;
        inphase                           :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En14
        quadrature                        :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En14
        ce_out                            :   OUT   std_logic;
        i_filtered                        :   OUT   std_logic_vector(37 DOWNTO 0);  -- sfix38_En30
        q_filtered                        :   OUT   std_logic_vector(37 DOWNTO 0)  -- sfix38_En30
        );
END bb_shaping;


ARCHITECTURE rtl OF bb_shaping IS

  ATTRIBUTE multstyle : string;

  -- Component Declarations
  COMPONENT FIR_Interpolation
    PORT( clk                             :   IN    std_logic;
          enb_1_1_1                       :   IN    std_logic;
          reset_x                         :   IN    std_logic;
          FIR_Interpolation_in            :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En14
          FIR_Interpolation_out           :   OUT   std_logic_vector(37 DOWNTO 0)  -- sfix38_En30
          );
  END COMPONENT;

  COMPONENT FIR_Interpolation1
    PORT( clk                             :   IN    std_logic;
          enb_1_1_1                       :   IN    std_logic;
          reset_x                         :   IN    std_logic;
          FIR_Interpolation1_in           :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En14
          FIR_Interpolation1_out          :   OUT   std_logic_vector(37 DOWNTO 0)  -- sfix38_En30
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : FIR_Interpolation
    USE ENTITY work.FIR_Interpolation(rtl);

  FOR ALL : FIR_Interpolation1
    USE ENTITY work.FIR_Interpolation1(rtl);

  -- Signals
  SIGNAL enb_1_1_1                        : std_logic;
  SIGNAL FIR_Interpolation_out1           : std_logic_vector(37 DOWNTO 0);  -- ufix38
  SIGNAL FIR_Interpolation1_out1          : std_logic_vector(37 DOWNTO 0);  -- ufix38

BEGIN
  u_FIR_Interpolation : FIR_Interpolation
    PORT MAP( clk => clk,
              enb_1_1_1 => enb_1_1_1,
              reset_x => reset_x,
              FIR_Interpolation_in => inphase,  -- sfix18_En14
              FIR_Interpolation_out => FIR_Interpolation_out1  -- sfix38_En30
              );

  u_FIR_Interpolation1 : FIR_Interpolation1
    PORT MAP( clk => clk,
              enb_1_1_1 => enb_1_1_1,
              reset_x => reset_x,
              FIR_Interpolation1_in => quadrature,  -- sfix18_En14
              FIR_Interpolation1_out => FIR_Interpolation1_out1  -- sfix38_En30
              );

  enb_1_1_1 <= clk_enable;

  ce_out <= enb_1_1_1;

  i_filtered <= FIR_Interpolation_out1;

  q_filtered <= FIR_Interpolation1_out1;

END rtl;

