-- -------------------------------------------------------------
-- 
-- File Name: /home/wardo/Documents/DVBS2/DVBS2/src/transmitter/altera_files/hdlsrc/transmitter/ram_repeat7.vhd
-- Created: 2021-02-07 15:24:31
-- 
-- Generated by MATLAB 9.9 and HDL Coder 3.17
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: ram_repeat7
-- Source Path: transmitter/tran_dut/ldpc_encoder/ram_bank/ram_repeat7
-- Hierarchy Level: 3
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY ram_repeat7 IS
  PORT( clk                               :   IN    std_logic;
        reset_x                           :   IN    std_logic;
        enb_1_8_0                         :   IN    std_logic;
        In1                               :   IN    std_logic;
        address                           :   IN    std_logic_vector(13 DOWNTO 0);  -- ufix14
        enable                            :   IN    std_logic;
        bit_out                           :   OUT   std_logic
        );
END ram_repeat7;


ARCHITECTURE rtl OF ram_repeat7 IS

  ATTRIBUTE multstyle : string;

  -- Component Declarations
  COMPONENT DualPortRAM_singlebit
    GENERIC( AddrWidth                    : integer;
             DataWidth                    : integer
             );
    PORT( clk                             :   IN    std_logic;
          enb_1_8_0                       :   IN    std_logic;
          wr_din                          :   IN    std_logic;
          wr_addr                         :   IN    std_logic_vector(AddrWidth - 1 DOWNTO 0);  -- generic width
          wr_en                           :   IN    std_logic;
          rd_addr                         :   IN    std_logic_vector(AddrWidth - 1 DOWNTO 0);  -- generic width
          wr_dout                         :   OUT   std_logic;
          rd_dout                         :   OUT   std_logic
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : DualPortRAM_singlebit
    USE ENTITY work.DualPortRAM_singlebit(rtl);

  -- Signals
  SIGNAL address_unsigned                 : unsigned(13 DOWNTO 0);  -- ufix14
  SIGNAL Delay1_out1                      : unsigned(13 DOWNTO 0);  -- ufix14
  SIGNAL Dual_Port_RAM_out2               : std_logic;
  SIGNAL Logical_Operator_out1            : std_logic;
  SIGNAL Dual_Port_RAM_out1               : std_logic;

BEGIN
  u_Dual_Port_RAM : DualPortRAM_singlebit
    GENERIC MAP( AddrWidth => 14,
                 DataWidth => 1
                 )
    PORT MAP( clk => clk,
              enb_1_8_0 => enb_1_8_0,
              wr_din => Logical_Operator_out1,
              wr_addr => std_logic_vector(Delay1_out1),
              wr_en => enable,
              rd_addr => address,
              wr_dout => Dual_Port_RAM_out1,
              rd_dout => Dual_Port_RAM_out2
              );

  address_unsigned <= unsigned(address);

  Delay1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay1_out1 <= to_unsigned(16#0000#, 14);
      ELSIF enb_1_8_0 = '1' THEN
        Delay1_out1 <= address_unsigned;
      END IF;
    END IF;
  END PROCESS Delay1_process;


  Logical_Operator_out1 <= Dual_Port_RAM_out2 XOR In1;

  bit_out <= Dual_Port_RAM_out2;

END rtl;

